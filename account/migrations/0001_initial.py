# Generated by Django 3.2.9 on 2022-04-05 07:52

import account.validators
import ckeditor.fields
from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': 'A user with that mobile number already exists.'}, help_text='09123456789', max_length=13, unique=True, validators=[account.validators.UnicodeUsernameValidator()], verbose_name='شماره تلفن')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='profile/%Y/%m/%d/', verbose_name='عکس پروفایل')),
                ('bio', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='درمورد من')),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'مرد'), ('FEMALE', 'زن')], max_length=25, null=True, verbose_name='جنسیت')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'پروفایل مشتری',
                'verbose_name_plural': 'پروفایل مشتری ها',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='CompanyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='Cprofile/%Y/%m/%d/', verbose_name='عکس پروفال')),
                ('home_phone_number', models.CharField(default=None, max_length=13, unique=True, validators=[django.core.validators.RegexValidator(message='شماره وارد شده اشتباه است\n01712345678', regex='^(\\+98|0)?\\d{10}$')], verbose_name='شماره تلفن شرکت')),
                ('bio', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='درمورد شرکت')),
                ('address_company', models.TextField(verbose_name='آدرس')),
                ('confirm', models.BooleanField(default=False, verbose_name='تاییدیه شرکت')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cprofile', to=settings.AUTH_USER_MODEL, verbose_name='شرکت')),
            ],
            options={
                'verbose_name': 'پروفایل فروشنده',
                'verbose_name_plural': 'پروفایل فروشنده ها',
                'ordering': ['user'],
            },
        ),
    ]
